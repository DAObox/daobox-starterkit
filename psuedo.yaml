// Import the necessary libraries
Library: @headlessui/react
  - Import: Transition
Library: tailwindcss

// Define a new React component called 'AnimatedClampedText'
Component AnimatedClampedText:
  Props:
    - clampLine: Integer
    - children: ReactNode

  // Define the component's state
  State:
    - isExpanded: false

  // Define a function for updating state
  Function toggleExpandState:
    - Modify isExpanded with !isExpanded

  // Define an event handler for user interactions
  EventHandler handleToggleExpand:
    - Call toggleExpandState

  // Render the component
  Render:
    - Display <div> with class "container":
      - Display <Transition> with appropriate configuration:
        - Display <div> with class "content" and conditional styles for clamping text based on isExpanded state and clampLine prop
          - Display children
      - Display <button> with class "toggle-button" and onClick event set to handleToggleExpand
        - If isExpanded:
          - Display "Show less"
        - Else:
          - Display "Show more"

// End of AnimatedClampedText

DOCS

Component API
Transition
Prop	Default	Description
show	—	
Boolean
Whether the children should be shown or hidden.

as	div	
String | Component
The element or component to render in place of the Transition itself.

appear	false	
Boolean
Whether the transition should run on initial mount.

unmount	true	
Boolean
Whether the element should be unmounted or hidden based on the show state.

enter	—	
String
Classes to add to the transitioning element during the entire enter phase.

enterFrom	—	
String
Classes to add to the transitioning element before the enter phase starts.

enterTo	—	
String
Classes to add to the transitioning element immediately after the enter phase starts.

entered	—	
String
Classes to add to the transitioning element once the transition is done. These classes will persist after that, until it's time to leave.

leave	—	
String
Classes to add to the transitioning element during the entire leave phase.

leaveFrom	—	
String
Classes to add to the transitioning element before the leave phase starts.

leaveTo	—	
String
Classes to add to the transitioning element immediately after the leave phase starts.

beforeEnter	—	
() => void
Callback which is called before we start the enter transition.

afterEnter	—	
() => void
Callback which is called after we finished the enter transition.

beforeLeave	—	
() => void
Callback which is called before we start the leave transition.

afterLeave	—	
() => void
Callback which is called after we finished the leave transition.

Transition.Child
Prop	Default	Description
as	div	
String | Component
The element or component to render in place of the Transition itself.

appear	false	
Boolean
Whether the transition should run on initial mount.

unmount	true	
Boolean
Whether the element should be unmounted or hidden based on the show state.

enter	—	
String
Classes to add to the transitioning element during the entire enter phase.

enterFrom	—	
String
Classes to add to the transitioning element before the enter phase starts.

enterTo	—	
String
Classes to add to the transitioning element immediately after the enter phase starts.

entered	—	
String
Classes to add to the transitioning element once the transition is done. These classes will persist after that, until it's time to leave.

leave	—	
String
Classes to add to the transitioning element during the entire leave phase.

leaveFrom	—	
String
Classes to add to the transitioning element before the leave phase starts.

leaveTo	—	
String
Classes to add to the transitioning element immediately after the leave phase starts.

beforeEnter	—	
() => void
Callback which is called before we start the enter transition.

afterEnter	—	
() => void
Callback which is called after we finished the enter transition.

beforeLeave	—	
() => void
Callback which is called before we start the leave transition.

afterLeave	—	
() => void
Callback which is called after we finished the leave transition.